# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret=">ki><wKEE_9rP09GqVaP:S?BK2s:DX0vVq6u1g7BoIDS]73CdqKbTvlmdtAsZMly"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

#mysql
db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:mysql://localhost/icpweb?characterEncoding=UTF-8&sessionVariables=storage_engine=InnoDB"
db.default.user="root"
db.default.pass="123"
db.default.logStatements=true

#
# You can expose this datasource via JNDI if needed (Useful for JPA)
db.default.jndiName=DefaultDS
jpa.default=defaultPersistenceUnit

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# default user password
defaultUserPassword = "123456"

# Mailer
# ~~~~~
#
# smtp.host=mpmail.thcg.net
# smtp.port=25
# smtp.ssl=true
# smtp.tls=true
# smtp.user=""
# smtp.password=""
# smtp.debug=true
 smtp.mock=true

#MDT NUMBER PREFIX
mdt.number.prefix="COV"
mdt.number.length=3

#EMR configuration
emr.storage.path="/var/local/VirtualTumorBoard_Server/ICPWebServer/ICPData"
emr.encryption=true

#AVATAR configuration
default.avatar.path="/public/src/img/icons/doctor_160x160.png"
default.group.path="/public/src/img/icons/doctor_group_bg.png"
avatar.storage.path="/var/local/VirtualTumorBoard_Server/ICPWebServer/ICPData/avatar"
snapshot.storage.path="/var/local/VirtualTumorBoard_Server/ICPWebServer/ICPData/snapshot"

#video conference account
video {
    server.addr="https://sandboxapp.cloopen.com"
    server.port=8883
    app.id="8a48b5514830387801483053f0cb0029"
}

colors{
  dept.color=["#d8a06e","#c3bf7b","#fe9259","#ffbc56","#8dc651","#6bd5c9","#7dace1","#de88c8","#ef869a","#d39191"]
  classification.color=["#e35205","#c76bb0","#e0a900","#77bc1f","#ff7247","#00c4b3","#008fc4","#ff6e89","#41c7b9",
    "#ffad00","#d04eec","#cb6a36"]
}

#backend switch
enableBackend=true

#akka system configuration
master {
    akka {
        actor {
            provider = "akka.remote.RemoteActorRefProvider"
        }
        remote {
            transport = "akka.remote.netty.NettyRemoteTransport"
            netty {
                hostname = "127.0.0.1"
                port = 2225
            }
        }
    }
}

# back end services with Akka
backends=[
	{class="backends.TestActor"},
	{class="backends.DicomSeriesProcessActor", interval="60"},
	{class="backends.MDTStatusResetActor", interval="600"},
	{class="backends.ConferenceBindResetActor", interval="60"}
]

deadbolt {
    java {
        handler=authorize.ICPDeadboltHandler
    }
}

